name: deploy-book

on:
  # Trigger the workflow on push to main branch
  workflow_dispatch:
  push:
    branches:
      - jupyter-book
    paths:
      - "myml/**"

env:
  BASE_URL: /${{ github.event.repository.name }}

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-book:
    runs-on: ubuntu-latest
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      pages: write
      id-token: write
    steps:
      - uses: actions/checkout@v3

      - name: Download data
        run: .github/workflows/setup.sh

      # Install dependencies
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      
      - name: Install Rust Kernel
        run: |
          cargo install --locked evcxr_jupyter
          evcxr_jupyter --install

      # Build the book
      - name: Build the book
        run: |
          jupyter-book build .

      # Upload the book's HTML as an artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact-book
          path: "_build/html"
          compression-level: 0

  build-doc:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./myml
    steps:
      - uses: actions/checkout@v3

      # Build doc
      - name: Run doc
        run: cargo doc --no-deps

      # Upload the book's HTML as an artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact-doc
          path: "myml/target/doc"
          compression-level: 0

  deploy:
    needs: [build-book, build-doc]
    runs-on: ubuntu-latest
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      pages: write
      id-token: write
    steps:
      - uses: actions/checkout@v3

      # Download the book's HTML artifact
      - uses: actions/download-artifact@v4

      # Delete artifacts
      - uses: geekyeggo/delete-artifact@v5
        with:
          name: |
            artifact-doc
            artifact-book
      
      # merge artifacts
      - name: Merge artifacts
        run: |
          cp -r artifact-doc/* artifact-book
      
      # Upload the book's HTML as an artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: "artifact-book"
      
      # Deploy the book's HTML to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages
